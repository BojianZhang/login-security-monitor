version: '3.8'

services:
  # MySQL数据库（开发环境）
  mysql-dev:
    image: mysql:8.0
    container_name: login-monitor-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: devpassword
      MYSQL_DATABASE: login_security_monitor_dev
      MYSQL_USER: dev_user
      MYSQL_PASSWORD: dev_pass
    ports:
      - "3307:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./database/init-data.sql:/docker-entrypoint-initdb.d/02-init-data.sql:ro
    networks:
      - dev-network

  # Redis缓存（开发环境）
  redis-dev:
    image: redis:7-alpine
    container_name: login-monitor-redis-dev
    restart: unless-stopped
    command: redis-server --requirepass devredis123
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - dev-network

  # MailHog（邮件测试工具）
  mailhog:
    image: mailhog/mailhog:latest
    container_name: login-monitor-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP端口
      - "8025:8025"  # Web界面端口
    networks:
      - dev-network

  # Adminer数据库管理工具
  adminer:
    image: adminer:latest
    container_name: login-monitor-adminer
    restart: unless-stopped
    depends_on:
      - mysql-dev
    ports:
      - "8081:8080"
    networks:
      - dev-network

  # Redis Commander
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: login-monitor-redis-commander
    restart: unless-stopped
    depends_on:
      - redis-dev
    environment:
      REDIS_HOSTS: local:redis-dev:6379:0:devredis123
    ports:
      - "8082:8081"
    networks:
      - dev-network

networks:
  dev-network:
    driver: bridge

volumes:
  mysql_dev_data:
    driver: local
  redis_dev_data:
    driver: local